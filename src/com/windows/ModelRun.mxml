<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" width="100%" height="100%" creationComplete="init()"
		   xmlns:s="library://ns.adobe.com/flex/spark" backgroundColor="0xC6DBEF" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:esri="http://www.esri.com/2008/ags" xmlns:classes="com.classes.*" xmlns:symbols="com.esri.ags.symbols.*" >
	
	<fx:Script>
		<![CDATA[
			import com.classes.AppEvent;
			import com.classes.WMSLayer;
			import com.classes.tooltips;
			import com.esri.ags.Graphic;
			import com.esri.ags.SpatialReference;
			import com.esri.ags.events.DrawEvent;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.layers.ArcGISTiledMapServiceLayer;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.ags.tools.DrawTool;
			import com.esri.ags.utils.JSONUtil;
			import com.esri.ags.utils.WebMercatorUtil;
			import com.skins.ToolTipSkin;
			import com.skins.helpPopupContainer;
			import com.skins.largeButtons;
			
			import mx.controls.Alert;
			import mx.events.ToolTipEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			[Bindable]
			private var runModelEnabled:Boolean = false;
			[Bindable]
			private var defaultDate:Date = new Date();
			[Bindable]
			public var modelstr:String = new String;
			[Bindable]
			public var emailStr:String = new String;
			[Bindable]
			public var behavior:String = new String;
			[Bindable]
			public var behaviorid:String = new String;
			[Bindable]
			public var datasetCurrents:String = new String;
			[Bindable]
			public var urlStr:String = new String;
			[Bindable]
			public var backgroundMapU:String = "";
			[Bindable]
			public var landMapU:String = "";
			[Bindable]
			public var forcingDomain:GraphicsLayer = new GraphicsLayer;
			[Bindable]
			public var modelrunsURL:String = new String;
			[Bindable]
			public var forcingURL:String = new String;
			[Bindable]
			public var sDate:Date = new Date;
			[Bindable]
			public var eDate:Date = new Date;
			
			//private var spatRef:SpatialReference = new SpatialReference(4326);
			//private var spatRefWM:SpatialReference = new SpatialReference(102100);
			
			[Bindable]private var gr:Graphic = new Graphic;
			
			private function init():void
			{
				var backgroundMap:ArcGISTiledMapServiceLayer = new ArcGISTiledMapServiceLayer(backgroundMapU);
				
				var landWater:WMSLayer = new WMSLayer(landMapU,'10m_land','10m_land',"png");
				
				landWater.alpha = .3;
				
				map.removeAllLayers();
				map.addLayer(backgroundMap);
				map.addLayer(forcingDomain);
				map.extent = forcingDomain.graphicProvider[0].geometry.extent;
				map.addLayer(landWater);
				runModelEnabled = false;
				//map.zoomIn();
				dt.markerSymbol = pt;
				dt.activate(DrawTool.MAPPOINT);
				AppEvent.addListener(AppEvent.EXIT_APP, exitApp);
				AppEvent.addListener(AppEvent.SET_APP_STATUS, enterAgain);
				var tempDate:Date = new Date();
				defaultDate = new Date(tempDate.getFullYear(),tempDate.getMonth(),tempDate.getDate()-5);
			}
			
			private function enterAgain(event:AppEvent):void{
				if(event.data.step == "model"){
					init();
				}
			}
			
			private function pointDrop(event:DrawEvent):void
			{
				map.removeLayer(map.getLayer("target"));
				var pointGraphic:GraphicsLayer = new GraphicsLayer;
				gr = event.graphic;
				pointGraphic.add(event.graphic);
				
				pointGraphic.id = "target";
				map.addLayer(pointGraphic);
				//check to see if the point connects with forcing Extent
				if(Extent(forcingDomain.graphicProvider[0].geometry.extent).contains(event.graphic.geometry) == false){
					error.text = "! Outside Forcing Domain. Click inside box.";
					runModelEnabled = false;
				}
				else
				{
					//GetFeature request
					var layerName:String = "10m_land";
					
					var _params:URLVariables = new URLVariables();
					_params.transparent = "true";
					
					_params.version = "1.1.1";
					_params.styles = "";
					
					//specific to getFeatureInfo:
					_params.request = "GetFeatureInfo"; 
					_params.info_format = "text/plain";
					_params.format="text/plain";
					_params.exceptions = "application/vnd.ogc.se_xml";
					_params.srs = "EPSG:3857";
					_params.service = "wms";
					//_params._dc= "1298660600532";
					_params.width = map.width;
					_params.height = map.height;
					
					_params.bbox = map.extent.xmin + "," + map.extent.ymin + "," + map.extent.xmax + "," + map.extent.ymax; 
					_params.layers = layerName;
					_params.query_layers=layerName;
					//_params.feature_count="3";  
					
					//add the pixel points of this click:
					_params.x = map.toScreen(event.graphic.geometry as MapPoint).x.toFixed();
					_params.y = map.toScreen(event.graphic.geometry as MapPoint).y.toFixed();
					
					var _httpService:HTTPService = new HTTPService();
					_httpService.showBusyCursor = true;
					_httpService.url = landMapU;
					
					//var layerTit:String = layer.name;
					
					_httpService.addEventListener("result", processIdentifyResults);
					_httpService.addEventListener("fault", onFault);
					_httpService.resultFormat = "xml"; 
					_httpService.send(_params);
					
					function onFault(event:FaultEvent):void
					{
						CursorManager.removeBusyCursor();
						error.text = "Land-Water Service Error";
						runModelEnabled = false;
					}
					
					function processIdentifyResults(event:ResultEvent):void
					{
						if(event.result.nodeValue.search("no features")>-1){
							error.text = "";
							runModelEnabled = true;
						}
						else{
							error.text = "Location is on Land.  Click outside land boundary.  ";
							runModelEnabled = false;
						}
						CursorManager.removeBusyCursor();
					}
				}
			}
			private function exitApp(event:AppEvent):void
			{
				
			}
			private function runModel():void
			{
				/* if(error.text != ""){
					Alert.show("Please select a map location within the Forcing Domain","Model Alert");
				}
				else  */
				if(dayChecker.text != ""){
					Alert.show("Please select a Duration time or Start Date within Forcing Time Domain","Model Alert");
				}
				else{
					AppEvent.dispatch(AppEvent.SET_APP_PROGRESS_ON,"");
					//convert to geographic coords
					var webmercpt:MapPoint = WebMercatorUtil.webMercatorToGeographic(gr.geometry) as MapPoint;
					
					var modelObject:Object = new Object;
					modelObject["hydro_path"] = datasetCurrents; 
					modelObject["duration"] = dur.value;
					modelObject["email"] = emailStr; 
					modelObject["geometry"] = "POINT ("+webmercpt.x+" "+webmercpt.y+")";//"POINT (-147 60.75)"; 
					modelObject["horiz_chunk"] = 4; 
					modelObject["horiz_dispersion"] = Number(horiDisp.text); 
					modelObject["behavior"] = urlStr+behavior +".json";
					modelObject["particles"] = parts.value;
					modelObject["release_depth"] = Number(depthVal.text);
					modelObject["start"] = starDate.selectedDate.time; 
					modelObject["time_chunk"] = 10;
					//add mins,hours, and days
					modelObject["timestep"] = timeSteH.value*3600+timeSteM.value*60+timeSteD.value*86400;
					
					modelObject["vert_dispersion"] = Number(vertDis.text);
					modelObject["time_method"] =methodT.selectedItem.value;
					
					var modelurlService:HTTPService = new HTTPService;
					modelurlService.url = modelstr;
					modelurlService.method = "POST";
					modelurlService.addEventListener(ResultEvent.RESULT,runCompleteHandler);
					modelurlService.addEventListener(FaultEvent.FAULT,loadErrorHandler);
					
					//convert to JSON
					var json:Object = new Object;
					json["config"] = JSONUtil.encode(modelObject);
					modelurlService.send(json);	
					// Status:  http://localhost:4001/runs/5040fffa963cfb31d865885e/status.json
					function runCompleteHandler(event:ResultEvent):void
					{
						var rsult:Object = JSON.parse(event.result.toString());
						//Alert.show("Your Model has Started.  Check the Models page to view Status.", "Model Notify");
						
						//Alert.show(rsult.results, "Model Update");
						AppEvent.dispatch(AppEvent.SET_APP_PROGRESS_OFF,"");
						
						var object:Object = new Object();
						object["step"] = "status";
						object["id"] = modelrunsURL;
						AppEvent.dispatch(AppEvent.SET_APP_STATUS,object);
					}
					function loadErrorHandler(event:FaultEvent):void
					{
						Alert.show(event.toString(),"Model Update - Fail?");
						AppEvent.dispatch(AppEvent.SET_APP_PROGRESS_OFF,"");
					}
				}
			}
			
			private function createCustomTip(title:String, event:ToolTipEvent):void {
				//No Eye Fucking eyedea why the fucking thing won't work
				var ptt:ToolTipSkin = new ToolTipSkin();
				ptt.text = title;
				event.toolTip = ptt;
			}
			
			private function checkTime():void {
				var i:int = dur.value*24*60*1000*60;
				var i2:Number = starDate.selectedDate.time;
				var realEndDate:Date = new Date(i2 + i);
				
				if(realEndDate.time > eDate.time){
					dayChecker.text = "Outside Forcing Availability Range";
				}
				else{
					dayChecker.text = "";
				}		
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				//this is the size of the full popup's container background
				var instructions:helpPopupContainer = new helpPopupContainer();
				instructions.open(this, true);
				instructions.width = stage.width;
				instructions.height = stage.height;
				
				PopUpManager.centerPopUp(instructions);
			}
			private function changeTimeS():void
			{
				timest.text = ((timeSteH.value*3600+timeSteM.value*60+timeSteD.value*86400)/60).toString();
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<symbols:PictureMarkerSymbol id="pt" source="@Embed('assets/images/SpillSite_glow.png')"/>
		<esri:DrawTool id="dt" map="{map}" drawEnd="pointDrop(event)" />
	</fx:Declarations>
	<s:Button styleName="btn-help" buttonMode="true" click="button1_clickHandler(event)" right="40" top="20"/>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center" paddingTop="5" paddingRight="25" paddingLeft="25" >
		
		<s:Label text="Run Model" styleName="pageTitles" />
		
		<!-- remove this if you want to stack vertically -->
		<mx:HRule width="100%"/>
		
		<!-- centers content, then set left to 0 to contrains it left -->
		<s:HGroup width="100%" horizontalAlign="center" >
			
			<!-- LEFT COLUMN -->
			<s:VGroup height="100%" width="42%" horizontalAlign="left" paddingTop="5">
				
				<s:Label text="Choose Model Items" styleName="msg-action"/>
				
				<s:VGroup gap="40" paddingLeft="-5">
					<mx:Form width="100%" >
						<!-- mx:FormHeading label="Group 1"/ -->
						<mx:FormItem label="Start Date:" styleName="form-labels">
							<mx:DateField change="checkTime()" id="starDate" selectableRange="{{rangeStart:sDate,rangeEnd:eDate}}" selectedDate="{defaultDate}" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.modelDate}" width="100"/>
						</mx:FormItem>
						
						<mx:FormItem label="Duration:" styleName="form-labels">
						<s:HGroup verticalAlign="baseline">
							<mx:NumericStepper id="dur" minimum="1" maximum="100" change="checkTime()" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.duration}" width="75"/>
							<mx:Label text="days" styleName="form-measures" />
							<mx:Label id="dayChecker" fontWeight="bold" color="#FF3333" />
							<!--<s:Button styleName="btn-help" click="alertDB.open(this, true);" buttonMode="true" />-->
						</s:HGroup>
						</mx:FormItem>						
						
						<mx:FormItem label="Total Time Step:" styleName="form-labels">
							<s:HGroup verticalAlign="baseline">
								<mx:NumericStepper change="changeTimeS()" id="timeSteM" value="60" maximum="60" minimum="1" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.modelStepper}" width="55"/>
								<mx:Label text="mins" styleName="form-measures" />
								<mx:NumericStepper change="changeTimeS()" id="timeSteH" value="0" maximum="24" minimum="0" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.modelStepper}" width="55"/>
								<mx:Label text="hrs"  styleName="form-measures" />
								<mx:NumericStepper change="changeTimeS()" id="timeSteD" value="0" maximum="40" minimum="0" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.modelStepper}" width="55"/>
								<mx:Label text="days" styleName="form-measures" />
							</s:HGroup>
						</mx:FormItem>
						
						<mx:FormItem label="Total Minutes:" styleName="form-labels">
							<s:HGroup verticalAlign="baseline">
								<mx:Label id="timest" text="60" fontWeight="bold" styleName="form-labels" />
							</s:HGroup>
						</mx:FormItem>
						<mx:FormItem label="Method:" styleName="form-labels">
						<mx:ComboBox selectionColor="#CAE8E8" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.interp}" id="methodT" height="25" paddingBottom="2" >
							<mx:dataProvider>
								<mx:ArrayList>
									<fx:Object label="Use Linear Interpolation" value="interp"/>
									<fx:Object label="Use Nearest Timestep" value="nearest"/>
								</mx:ArrayList>
							</mx:dataProvider>
						</mx:ComboBox>
						</mx:FormItem>
						
						<s:Spacer height="10"/>
						<mx:HRule height="1" width="100%" />			
						<s:Spacer height="10"/>
						
						<mx:FormItem label="Particles:" styleName="form-labels">
						<mx:NumericStepper minimum="1" toolTip="{tooltips.particles}" toolTipCreate="createCustomTip('', event)" maximum="1000" id="parts" width="75"/>
						</mx:FormItem>
						
						<mx:FormItem label="Release Depth:" styleName="form-labels">
						<s:HGroup verticalAlign="baseline">
							<classes:NumberInput width="57" text="0" fractionalDigits="5" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.depthT}" id="depthVal"/>
							<mx:Label text="meters" styleName="form-measures" />
						</s:HGroup>
						</mx:FormItem>
						
						<mx:FormItem label="Horizontal Dispersion:" styleName="form-labels">
						<s:HGroup verticalAlign="baseline">
							<classes:NumberInput width="57" text="0.0" toolTip="{tooltips.hDisp}" toolTipCreate="createCustomTip('', event)" fractionalDigits="5" id="horiDisp"/>
							<mx:Label text="m/s" styleName="form-measures" />
						</s:HGroup>
						</mx:FormItem>
						
						<mx:FormItem label="Vertical Dispersion:" styleName="form-labels">
							<s:HGroup verticalAlign="baseline">
								<classes:NumberInput width="57" text="0.0" toolTip="{tooltips.vDisp}" toolTipCreate="createCustomTip('', event)" fractionalDigits="5" id="vertDis"/>
								<mx:Label text="m/s" styleName="form-measures" />
							</s:HGroup>
						</mx:FormItem>						
					</mx:Form>
				</s:VGroup>
				
			</s:VGroup>
			<!-- / END - LEFT COLUMN -->
			
			<!-- RIGHT COLUMN -->
			<s:VGroup height="100%" width="65%" right="0" paddingTop="5">
				<s:HGroup verticalAlign="baseline" >
					<s:Label text="Select a point on Map" styleName="msg-action"/>
					<s:Label text="Showing Forcing Domain on map" />
				</s:HGroup>
				<esri:Map id="map" width="100%" height="100%" minHeight="330"
						  wrapAround180="false" scaleBarVisible="false" logoVisible="false" level="6" zoomSliderVisible="true" />		
				
				<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" height="40" paddingTop="10" paddingRight="120">
					<s:Label  id="error" styleName="msg-error"/>
					<!--<s:Button id="goBack" label="&lt; PREVIOUS" height="40" width="140" toolTipCreate="createCustomTip('', event)" toolTip="Go Back" click="back()"/>-->
					<s:Button id="goButt" label="RUN MODEL &gt;" enabled="{runModelEnabled}" click="runModel()"
							  toolTipCreate="createCustomTip('', event)"  toolTip="Run Model" height="40" width="140" 
							  skinClass="com.skins.largeButtons"/>
				</s:HGroup>
			</s:VGroup>
			<!-- / END - RIGHT COLUMN -->
		</s:HGroup>	
	</s:VGroup>
	
	
	<!-- ORIGINAL
	<mx:VBox width="100%" height="100%" paddingTop="13" horizontalAlign="center">
	<s:Label text="Run Model" fontSize="20" paddingBottom="5" paddingTop="5" fontWeight="bold"/>
	<mx:HRule width="100%"/>
	
	<mx:HBox verticalAlign="middle" horizontalAlign="center" width="85%" paddingTop="3" paddingBottom="3">
	<mx:HBox verticalAlign="middle" horizontalAlign="center" width="85%" paddingTop="1" paddingBottom="1">
	<mx:Label fontWeight="bold"  fontSize="13" text="Start Date:" />
	<mx:DateField id="starDate" selectedDate="{defaultDate}" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.modelDate}"/>
	<mx:Label fontWeight="bold" fontSize="13" text="Duration:" />
	<mx:NumericStepper fontWeight="bold" id="dur" minimum="1" maximum="100" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.duration}"/>
	<s:Label text="days" color="white" fontWeight="bold" fontSize="12"/>
	<!/-<mx:ComboBox selectionColor="#CAE8E8" paddingLeft="0" id="durUnits" dataProvider="['days','months']" />/->
	<mx:Label fontWeight="bold" fontSize="13" text="Time Step:" />
	<mx:NumericStepper fontWeight="bold" toolTip="{tooltips.modelStepper}" toolTipCreate="createCustomTip('', event)" id="timeSte" value="60" maximum="1000" minimum="10"/>
	<s:Label text="minutes" color="white" fontWeight="bold" fontSize="12"/>
	<mx:ComboBox selectionColor="#CAE8E8" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.interp}" id="methodT" >
		<mx:dataProvider>
			<mx:ArrayList>
				<fx:Object label="Use Linear Interpolation" value="interp"/>
				<fx:Object label="Use Nearest Timestep" value="nearest"/>
			</mx:ArrayList>
		</mx:dataProvider>
	</mx:ComboBox>
				</mx:HBox>
			</mx:HBox>
	<mx:HRule width="100%"/>
	<mx:HBox verticalAlign="middle" horizontalAlign="center" width="85%" paddingTop="3" paddingBottom="3">
		<mx:HBox verticalAlign="middle" horizontalAlign="center" width="85%" paddingTop="1" paddingBottom="1">
			<mx:Label fontWeight="bold" fontSize="13" text="Particles:" />
			<mx:NumericStepper fontWeight="bold" minimum="1" toolTip="{tooltips.particles}" toolTipCreate="createCustomTip('', event)" maximum="1000" id="parts"  />
			<mx:Label fontWeight="bold" fontSize="13" text="Release Depth:" />
			<classes:NumberInput width="60" text="0" fractionalDigits="5" toolTipCreate="createCustomTip('', event)" toolTip="{tooltips.depthT}" id="depthVal"/>
			<s:Label text="Meters" color="white" fontWeight="bold" toolTip="{tooltips.depthT}" fontSize="12"/>
			<mx:Label fontWeight="bold"  fontSize="13" text="Horizontal Dispersion:" />
			<classes:NumberInput width="60" text="0.0" toolTip="{tooltips.hDisp}" toolTipCreate="createCustomTip('', event)" fractionalDigits="5" id="horiDisp"/>
			<s:Label text="m/s" color="white" fontWeight="bold" fontSize="12"/>
			<mx:Label fontWeight="bold" fontSize="13" text="Vertical Dispersion:" />
			<classes:NumberInput width="60" toolTip="{tooltips.vDisp}" text="0.0" toolTipCreate="createCustomTip('', event)" fractionalDigits="5" id="vertDis"/>
			<s:Label text="m/s" color="white" fontWeight="bold" fontSize="12"/>
		</mx:HBox>
	</mx:HBox>
	<mx:HRule width="100%"/>
	<mx:HBox verticalAlign="middle" width="85%">
		<mx:VBox horizontalAlign="center">
			<mx:Label paddingBottom="40" fontWeight="bold" paddingLeft="0" fontSize="14" text="Select a point on Map" toolTip="Run Model Steps" />
			<mx:Label paddingLeft="0" fontSize="12" fontWeight="bold" text="Showing"  />
			<mx:Label paddingLeft="0" fontSize="12" text="Forcing domain" />
			<mx:Label paddingLeft="0" fontSize="12" text="on map" />
		</mx:VBox>
		<esri:Map id="map" wrapAround180="true" scaleBarVisible="false" logoVisible="false" level="2" zoomSliderVisible="true" height="310" />
	</mx:HBox>
	<mx:HRule width="100%"/>
	<mx:HBox verticalAlign="middle" horizontalAlign="center" width="100%" height="35" paddingTop="3" paddingBottom="3">
		<!/-<s:Button fontWeight="bold" fontSize="14" label="Back" id="goBack" toolTip="Go Back" click="{dt.activate(DrawTool.MAPPOINT)}" />->
		<s:Label color="#FF3333" fontWeight="bold" id="error"/>
		<s:Button fontWeight="bold" fontSize="14" label="Run Model" enabled="false" id="goButt" toolTip="Run Model" toolTipCreate="createCustomTip('', event)" click="runModel()"/>
	</mx:HBox>
	</mx:VBox>
	-->
</mx:Canvas>